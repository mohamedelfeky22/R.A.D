@model R.A.D.Models.ViewModels.AuctionVM

@{
    ViewBag.Title = "Update Product";
}

@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}

<div>
    @Html.ActionLink("Back to Products", "ListOfAuctionProducts", "Auction", null, new { @class = "btn btn-default", style = "margin-left:70px;border:1px solid black" })
</div>

<h3 class="text-center col-lg-12" style="margin-top:10px;">Update the product </h3>

<section class="cart-total-page spad" style="margin-top:10px;">
    <div class="container">


        @using (Html.BeginForm("UpdateProduct", "Auction", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {


            @Html.AntiForgeryToken()














            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="col-lg-9">

                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">Name</p>
                        </div>
                        <div class="col-lg-10">

                            @Html.EditorFor(model => model.Name, new
                           {
                               htmlAttributes = new
                               {
                                   style = "width: 100%; border: 0; padding-bottom: 12px;border-bottom: 2px solid #E7EBED;color: #838383;  font-size: 16px;margin-bottom: 32px;height:30px;",
                                   placeholder = "Name"
                               }
                           })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">
                                @Html.LabelFor(model => model.CountryOfOrgin, htmlAttributes: new { @class = "control-label col-md-2" })
                            </p>
                        </div>
                        <div class="col-lg-10">


                            @Html.EditorFor(model => model.CountryOfOrgin, new
                       {
                           htmlAttributes = new
                           {
                               style = "width: 100%; border: 0; padding-bottom: 12px;border-bottom: 2px solid #E7EBED;color: #838383;  font-size: 16px;margin-bottom: 32px;height:30px;",
                               placeholder = "Name"
                           }
                       })
                            @Html.ValidationMessageFor(model => model.CountryOfOrgin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">
                                @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
                            </p>
                        </div>
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.Details, new
                       {
                           htmlAttributes = new
                           {
                               style = "width: 100%; border: 0; padding-bottom: 12px;border-bottom: 2px solid #E7EBED;color: #838383;  font-size: 16px;margin-bottom: 32px;height:30px;",
                               placeholder = "Name"
                           }
                       })
                            @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">@Html.LabelFor(model => model.Description)</p>
                        </div>
                        <div class="col-lg-10">

                            @Html.TextAreaFor(model => model.Description, new { style = "width: 100%; border: 0; padding-bottom: 12px;border-bottom: 2px solid #E7EBED; color: #838383;  font-size: 16px;margin-bottom: 32px;height:50px;", type = "Description", placeholder = "Description" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">
                                @Html.LabelFor(model => model.StartingPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                            </p>
                        </div>
                        <div class="col-lg-10">

                            @Html.EditorFor(model => model.StartingPrice, new
                       {
                           htmlAttributes = new
                           {
                               style = "width: 100%; border: 0; padding-bottom: 12px;border-bottom: 2px solid #E7EBED;color: #838383;  font-size: 16px;margin-bottom: 32px;height:30px;",
                               placeholder = "Name"
                           }
                       })
                            @Html.ValidationMessageFor(model => model.StartingPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">
                                @Html.LabelFor(model => model.LastPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.LastPrice, new
                   {
                       htmlAttributes = new
                       {
                           style = "width: 100%; border: 0; padding-bottom: 12px;border-bottom: 2px solid #E7EBED;color: #838383;  font-size: 16px;margin-bottom: 32px;height:30px;",
                           placeholder = "Name"
                       }
                   })
                            @Html.ValidationMessageFor(model => model.LastPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">
                                @Html.LabelFor(model => model.Auction_Ended, htmlAttributes: new { @class = "control-label col-md-2" })
                            </p>
                        </div>
                        <div class="col-lg-10">

                            @Html.EditorFor(model => model.Auction_Ended, new
                       {
                           htmlAttributes = new
                           {
                               style = "width: 100%; border: 0; padding-bottom: 12px;border-bottom: 2px solid #E7EBED;color: #838383;  font-size: 16px;margin-bottom: 32px;height:30px;",
                               placeholder = "Name"
                           }
                       })
                            @Html.ValidationMessageFor(model => model.Auction_Ended, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">
                                @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
                            </p>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-12">
                            <input type="submit" value="Update" class="btn btn-success" style="float:right" />
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <img  src="~/Images/Uploads/Products/@Model.Id/@Model.ImageName" />
                </div>

            </div>
        }

        <hr />
        @if (!Model.GalleryImages.Any())
        {
            <h4 class="text-danger text-center">There are no gallery images for this product.</h4>
        }




        <form action="/Auction/SaveGalleryImages?Id=@Model.Id"
              method="post" enctype="multipart/form-data" class="dropzone" style="width:80%;margin:auto;">
            <div class="fallback" id="UploadMe">
                <input type="file" name="file" multiple />
                <input type="submit" class="btn btn-success" value="Upload" />
            </div>
        </form>
        <br />
        <br />
        <div class="container">
            <div class="row">
                @foreach (var image in Model.GalleryImages)
                {

                <div class="col-lg-4">
                    <img src="~/Images/Uploads/Products/@Model.Id/@image" alt="Alternate Text" style="width:300px;height:400px;" />
                  
                    @Html.ActionLink(" Delete", "DeleteGalleryImages", "Auction", null,
    new
    {
        @class = "DeleteImage btn btn-danger fa fa-trash"
    ,
    style = "margin-top:5px;padding:10px;margin-left:100px"
    ,
        data_name = image
    })
                </div>

                }
            </div>
        </div>
    </div>
</section>

@section Scripts{


    <script>
        //--------------------------------------------------Read Image

    $(document).ready(function () {
        //function ReadUrl(input) {
        //    if (input.files && input.files[0]) {

        //        var reader = new FileReader();

        //        reader.onload = function (e) {
        //            $("img#ImgPreview").css("display", "block")
        //                .attr("src", e.target.result)
        //                .width(600)
        //                .height(400);
        //        }
        //        reader.readAsDataURL(input.files[0]);
        //    }
        //}

        //$("#ImageUpload").change(function () {
        //    ReadUrl(this);
        //});



            /*/ DropZone js*/

            Dropzone.autoDiscover = false;

            $("#UploadMe").dropzone({
                acceptedFiles: "/image/*",
                init: function () {

                    this.on("complete", function (file) {
                        if (this.getUploadingFiles().length == 0 &&
                            this.getQueuedFiles().length == 0) {
                            console.log(this);
                            location.reload();
                        }
                    });
                    this.on('sending', function (file, xhr, formData) {
                            console.log(this);
                            formData.append("Id",@Model.Id);
                        });
                }

            });
            /////////////////////////////////////////////////

            $("a.DeleteImage").click(function (e) {
                e.preventDefault();

                if (!confirm("Do you want to delete this image?")) return false;

                var $this = $(this);

                var url = "/Auction/DeleteGalleryImages";

                var imageName = $this.data("name");


                $.post(url, {
                    Id:@Model.Id,
                    ImageName: imageName
                },
                    function (data) {
                        $this.parent().fadeOut("slow");
                    })
            })
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}

