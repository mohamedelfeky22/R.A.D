@model R.A.D.Models.ViewModels.RentVM

@{
    ViewBag.Title = "Update Product";
}

@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}
<div>
    @Html.ActionLink("Back to Products", "RentProducts", "Rent", null, new { @class = "btn btn-default", style = "margin-left:70px;border:1px solid black" })
</div>


<h3 class="text-center col-lg-12" style="margin-top:10px;">Update new product </h3>


<section style="margin-top:10px;">
    <div class="container">
        @using (Html.BeginForm("UpdateProduct", "Rent", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">Name</p>
                        </div>
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.Name, new
                            {
                                htmlAttributes = new
                                {
                                    style = "width: 100%; border: 0; padding-bottom: 12px;border-bottom: 2px solid #E7EBED;color: #838383;  font-size: 16px;margin-bottom: 32px;height:30px;",
                                    placeholder = "Name"
                                }
                            })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">Renting Period</p>
                        </div>
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.Renting_Period, new
                            {
                                htmlAttributes = new
                                {
                                    style = "width: 100%; border: 0; padding-bottom: 12px;border-bottom: 2px solid #E7EBED;color: #838383;  font-size: 16px;margin-bottom: 32px;height:30px;",
                                    placeholder = "Renting Period"
                                }
                            })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">Price</p>
                        </div>
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.Price, new
                            {
                                htmlAttributes = new
                                {
                                    style = "width: 100%; border: 0; padding-bottom: 12px;border-bottom: 2px solid #E7EBED;color: #838383;  font-size: 16px;margin-bottom: 32px;height:30px;",
                                    placeholder = "Price"
                                }
                            })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">@Html.LabelFor(model => model.CategoryId)</p>
                        </div>
                        <div class="col-lg-10">
                            @Html.DropDownListFor(model => model.CategoryId, Model.Categories
                           , "Select Category",
                           new { style = "width: 50%; border: 0; padding-bottom: 12px;border-bottom: 2px solid #E7EBED;color: #838383;font-size: 16px;margin-bottom: 32px;height:40px;" })

                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">@Html.LabelFor(model => model.Description)</p>
                        </div>
                        <div class="col-lg-10">

                            @Html.TextAreaFor(model => model.Description, new { style = "width: 100%; border: 0; padding-bottom: 12px;border-bottom: 2px solid #E7EBED; color: #838383;  font-size: 16px;margin-bottom: 32px;height:50px;", type = "Description", placeholder = "Description" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-2">
                            <p class="in-name">@Html.LabelFor(model => model.ImageName)</p>
                        </div>
                        <div class="col-lg-10">
                            <input type="file" name="file" id="ImageUpload" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <input type="submit" value="Update" class="btn btn-success" style="float:right" />
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">  <img id="ImgPreview" src="#" style="display:none" /></div>
            </div>
        }
    </div>
</section>
<hr />



<hr />
@if (!Model.GalleryImages.Any())
{
    <h4 class="text-danger text-center">There are no gallery images for this product.</h4>
}




<form action="/Donate/SaveGalleryImages?Id=@Model.Id"
      method="post" enctype="multipart/form-data" class="dropzone" style="width:80%;margin:auto;">
    <div class="fallback" id="UploadMe">
        <input type="file" name="file" multiple />
        <input type="submit" class="btn btn-success" value="Upload" />
    </div>
</form>
<br />
<br />
<div class="container">
    <div class="row">
        @foreach (var image in Model.GalleryImages)
        {

            <div class="col-lg-4">
                <img src="~/Images/Uploads/Products/@Model.Id/Gallery/Thumbs/@image" alt="Alternate Text" style="width:300px;height:400px;" />
                @Html.ActionLink(" Delete", "DeleteGalleryImages", "Donate", null,
new
{
    @class = "DeleteImage btn btn-danger fa fa-trash"
,
style = "margin-top:5px;padding:10px;margin-left:100px"
,
    data_name = image
})
            </div>

        }
    </div>
</div>


@section Scripts{


    <script>
        //--------------------------------------------------Read Image

        $(document).ready(function () {
            function ReadUrl(input) {
                if (input.files && input.files[0]) {

                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $("img#ImgPreview").css("display","block")
                            .attr("src", e.target.result)
                            .width(600)
                            .height(400);
                       
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#ImageUpload").change(function () {
                ReadUrl(this);
            });



            /*/ DropZone js*/

            Dropzone.autoDiscover = false;

            $("#UploadMe").dropzone({
                acceptedFiles: "/image/*",
                init: function () {

                    this.on("complete", function (file) {
                        if (this.getUploadingFiles().length == 0 &&
                            this.getQueuedFiles().length == 0) {
                            console.log(this);
                            location.reload();
                        }
                    });
                    this.on('sending', function (file, xhr, formData) {
                            console.log(this);
                            formData.append("Id",@Model.Id);
                        });
                }

            });
            /////////////////////////////////////////////////

            $("a.DeleteImage").click(function (e) {
                e.preventDefault();

                if (!confirm("Do you want to delete this image?")) return false;

                var $this = $(this);

                var url = "/Donate/DeleteGalleryImages";

                var imageName = $this.data("name");


                $.post(url, {
                    Id:@Model.Id,
                    ImageName: imageName
                },
                    function (data) {
                        $this.parent().fadeOut("slow");
                    })


            })

        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}

